---
- name: OpenAuto Pi Setup
  hosts: all
  become: true
  vars:
    ssh_pubkey: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIF5Buzvlm9muLrosWs1MfpnecnxzIlSoox1OF8LkRAmD tig@tiga.tech
    password_hash: $6$rounds=656000$zGzJDXD8c6f3Zi23$p4s751WKk3JgCqH4s.f/Em8Ubld3pOUZsrKyOog74oT0Y/YkegG3pnTDwjYCpe.40sLAVXjxXobHj3PezM8C0/
  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: CarPi
        use: debian
      notify: Reboot

    - name: Set password
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        password: "{{ password_hash }}"

    - name: Install SSH key
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ ssh_pubkey }}"

    - name: Copy OpenAuto configuration
      ansible.builtin.copy:
        src: "{{ item.root + item.path }}"
        dest: /home/{{ ansible_user }}/.openauto/{{ item.path }}
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0644
        directory_mode: 0755
      loop: >-
        {{ lookup('filetree', '../pi/openauto/', wantlist=True) }}
      loop_control:
        label: "{{ item.path }}"
      when:
        - item.state == 'file'
        - not 'SAMPLE' in item.path
      notify: Restart display-manager # This restarts OpenAuto.

    - name: Create scripts directory
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/scripts
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755
      register: scripts_dir

    - name: Copy scripts
      ansible.builtin.copy:
        src: "{{ item.root + item.path }}"
        dest: "{{ scripts_dir.path }}/{{ item.path }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0774
        directory_mode: 0755
      loop: >-
        {{ lookup('filetree', '../pi/scripts/', wantlist=True) }}
      loop_control:
        label: "{{ item.path }}"
      register: copy_scripts

    - name: Add OpenAuto start menu item
      ansible.builtin.copy:
        dest: /home/{{ ansible_user }}/.local/share/applications/OpenAuto.desktop
        content: |
          [Desktop Entry]
          Name=OpenAuto
          Exec=/home/{{ ansible_user }}/Desktop/openauto
          Terminal=false
          Type=Application
          Categories=Utility;
          Encoding=UTF-8
        mode: 0755
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      notify: Restart display-manager

    - name: Copy custom OpenAuto splash animation
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /usr/share/openautopro
      loop:
        - ../pi/splash-animation/audi_splash1.h264
        - ../pi/splash-animation/audi_splash2.h264

    - name: Create OpenAuto splash systemd unit override directory
      ansible.builtin.file:
        path: /etc/systemd/system/openautopro.splash.service.d
        state: directory
        mode: 0755
        owner: root
        group: root
      register: oap_splash_override_dir

    - name: Install OpenAuto splash systemd unit override
      ansible.builtin.copy:
        dest: "{{ oap_splash_override_dir.path }}/override.conf"
        content: |
          [Service]
          Environment="OPENAUTO_SPLASH_VIDEOS=/usr/share/openautopro/audi_splash1.h264:/usr/share/openautopro/audi_splash2.h264"
        mode: 0644
        owner: root
        group: root
      notify: Reload systemctl daemon

    - name: Install Zero2Go utilities
      ansible.builtin.script: "{{ scripts_dir.path }}/installZero2Go.sh"
      args:
        creates: /home/{{ ansible_user }}/zero2go

    - name: Install Waveshare display utilities
      ansible.builtin.include_role:
        name: waveshare-display-utils

  handlers:
    - name: Reboot
      ansible.builtin.reboot:

    - name: Restart display-manager
      ansible.builtin.service:
        name: display-manager
        state: restarted

    - name: Reload systemctl daemon
      ansible.builtin.systemd:
        daemon_reload: true
